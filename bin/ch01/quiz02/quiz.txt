Q1. case01 패키지를 만들어, 아래 내용을 수행하세요.
	1) ScoreParent
	  - 필드: 이름, 국어, 영어, 수학, 총점, 평균  + get/set
	2) ScoreChild
	  - 필드: 음악, 체육 + get/set
	3) ScoreMain
	  - (입력) ScoreChild 이용해, 이름, 국어, 영어, 수학, 음악, 체육 점수 입력
	  - (출력) ScoreChild 이용해, 이름, 총점, 평균 출력
	4) ScoreService
	  - Main에서 사용할 기능 구현
	  
	메뉴: 1. 입력  2. 출력  0. 프로그램 종료
	ScoreChild[] score = new ScoreChild[5];
	
Q2. case02 패키지를 만들어, 아래 내용을 수행하세요.
	1) Fruit 클래스 생성
	  - 필드: 가격, 수량
	  - 메소드: 출력 메소드
	2) Banana 클래스 생성
	  - 필드: 가격(1000), 수량(10)
	3) Apple 클래스 생성
	  - 필드: 가격(1500), 수량(5)
	4) Orange 클래스 생성
	  - 필드: 가격(2000), 수량(20)  
	5) Main
	  - Fruit 클래스 타입으로 각가 자식 클래스 객체 생성/출력
	  
Q3. case03 패키지를 만들어, 아래 내용을 수행하세요.
	1) Fruit 클래스 생성
	  - 필드: 가격, 수량
	  - 메소드: 출력 메소드(블록 안에 내용 구현X)
	2) Banana 클래스 생성
	  - 필드: 가격(1000), 수량(10)  /  오버라이딩
	3) Apple 클래스 생성
	  - 필드: 가격(1500), 수량(5)  /  오버라이딩
	4) Orange 클래스 생성
	  - 필드: 가격(2000), 수량(20)  /  오버라이딩
	5) SellFruit 클래스 생성
	  - 필드: 총판매 금액(과일전체), 총판매 수량(과일전체)
	6) SellService 클래스 생성
	  - 기능 구현
	7) SellMain 클래스 생성
	  - 메뉴: 1. 판매  2. 매출정보보기  3.재고보기  0.프로그램 종료
	  
	  - 메뉴 1. 판매 선택 시
	    1.바나나 
	    2.사과 
	    3.오렌지
	    과일선택: 1
	    판매 수량 입력: 10
	    
	  - 메뉴 2. 매출정보보기 선택 시
	    ### 매출 보기 ###
	    총판매금액: 10000
	    총판매수량: 10
	    
	  - 메뉴 3. 재고보기 선택 시
	    ### 바나나 ###
	    수량: 0
	    ### 사과 ###
	    수량: 5
	    ### 오렌지 ###
	    수량: 20
	  
Q4. case04 패키지를 만들어, 아래 내용을 수행하세요.
	1) Q3의 내용에 아래 내용의 코드를 추가한다.
	  - 기능에 수량 입력할 수 있도록 구현
	  - 총 판매 금액, 수량을 각 과일별로 배열을 이용해서 구현  
	    > (SellService) String[] fName = {"바나나", "사과", "오렌지"};
	    > (SellMain)    SellFruit[] sf = new SellFruit[3];
	    
Q5. case05 패키지를 만들어, 아래 내용을 수행하세요.
	1) Member 클래스 생성
	  - 필드: 이름, 나이, 이메일  +  get/set
	2) Score 클래스 생성
	  - 필드: 국어, 영어, 수학, 총점, 평균  +  get/set
	3) Main
	  - (입력) Member, Score 입력
	  - (출력) Member, Score 출력(이름, 총점, 평균만 출력)
	  - 수정, 삭제 기능 추가
	4) MainService
	  - Main에서 사용할 기능 구현
